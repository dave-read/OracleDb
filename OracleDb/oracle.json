{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "SSH rsa public key file as a string."
      }
    },
    "vnetConfig": {
      "type": "object",
      "metadata": {
        "description": "VnetPrefixes"
      }
    },
    "dbDistroConfig": {
      "type": "object",
      "defaultValue": {
        "imagePublisher": "Oracle",
        "imageOffer": "Oracle-Linux",
        "imageSKU": "7.2"
      },
      "metadata": {
        "description": "Db server Distro"
      }
    },
    "dbServerConfig": {
      "type": "object",
      "defaultValue": {
        "dataDiskSizeGb": "1023",
        "redoDiskSizeGb": "512",
        "fraDiskSizeGb": "512"
      },
      "metadata": {
        "description": "Db server VM Config"
      }
    },
    "dbServers": {
      "type": "array",
      "metadata": {
        "description": "database servers"
      }
    },
    "appDistroConfig": {
      "type": "object",
      "defaultValue": {
        "imagePublisher": "OpenLogic",
        "imageOffer": "CentOS",
        "imageSKU": "6.8"
      },
      "metadata": {
        "description": "App server Distro"
      }
    },
    "appServerConfig": {
      "type": "object",
      "defaultValue": {
        "vmSize": "Standard_D2_v2"
      },
      "metadata": {
        "description": "App server configuration"
      }
    },
    "appServers": {
      "type": "array",
      "metadata": {
        "description": "app servers"
      }
    },
    "jumpBoxConfig": {
      "type": "object",
      "metadata": {
        "description": "jumpBox VM"
      }
    }

  },
  "variables": {
    "apiVersion": "2015-06-15",

    "sshKeyPath": "[concat('/home/',parameters('adminUserName'),'/.ssh/authorized_keys')]",

    "standardStorageUnique": "[uniqueString(resourceGroup().id,'standard')]",
    "premiumStorageUnique": "[uniqueString(resourceGroup().id,'premium')]",

    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetConfig').vnetName)]",
    "adminSubnetRef": "[concat(variables('vnetID'),'/subnets/admin')]",
    "appSubnetRef": "[concat(variables('vnetID'),'/subnets/app')]",
    "dbSubnetRef": "[concat(variables('vnetID'),'/subnets/db')]"

  },
  "resources": [

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('jumpBoxConfig').hostName,'-pip')]",
      "tags": {
        "displayName": "jumpbox-pip"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('jumpBoxConfig').dnsPrefix]"
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "app-as",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "app-as"
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "db-as",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "db-as"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('standardStorageUnique')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "StandardStorageAccount"
      },
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('premiumStorageUnique')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "PremiumStorageAccount"
      },
      "properties": {
        "accountType": "Premium_LRS"
      }
    },
    {
      "name": "[parameters('vnetConfig').vnetName]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "[parameters('vnetConfig').vnetName]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetConfig').vnetAddressPrefix]"
          ]
        },
        "subnets": [
          {
            "name": "admin",
            "properties": {
              "addressPrefix": "[parameters('vnetConfig').adminSubnetAddressPrefix]"
            }
          },
          {
            "name": "app",
            "properties": {
              "addressPrefix": "[parameters('vnetConfig').appSubnetAddressPrefix]"
            }
          },
          {
            "name": "db",
            "properties": {
              "addressPrefix": "[parameters('vnetConfig').dbSubnetAddressPrefix]"
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "[parameters('vnetConfig').gwSubnetAddressPrefix]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('appServers')[copyindex()].hostName,'-nic')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "AppNetworkInterfaces"
      },
      "copy": {
        "name": "appNicLoop",
        "count": "[length(parameters('appServers'))]"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('appServers')[copyindex()].ip]",
              "subnet": {
                "id": "[variables('appSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('dbServers')[copyindex()].hostName,'-nic')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "DbNetworkInterfaces"
      },
      "copy": {
        "name": "dbNicLoop",
        "count": "[length(parameters('dbServers'))]"
      },
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('dbServers')[copyindex()].ip]",
              "subnet": {
                "id": "[variables('dbSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('jumpBoxConfig').hostName,'-nic')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "JumpBoxNetworkInterface"
      },
      "dependsOn": [
        "[variables('vnetID')]",
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('jumpBoxConfig').hostName,'-pip')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('jumpBoxConfig').hostName,'-pip'))]"
              },
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('jumpBoxConfig').ip]",
              "subnet": {
                "id": "[variables('adminSubnetRef')]"
              }
            }
          }
        ]
      }
    },

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('appServers')[copyindex()].hostName]",
      "copy": {
        "name": "appServerVmLoop",
        "count": "[length(parameters('appServers'))]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "AppVirtualMachines"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('standardStorageUnique'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('appServers')[copyindex()].hostName,'-nic')]",
        "Microsoft.Compute/availabilitySets/app-as"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets','app-as')]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('appServerConfig').vmSize]"
        },
        "osProfile": {
          "computerName": "[parameters('appServers')[copyindex()].hostName]",
          "adminUsername": "[parameters('adminUserName')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('appDistroConfig').imagePublisher]",
            "offer": "[parameters('appDistroConfig').imageOffer]",
            "sku": "[parameters('appDistroConfig').imageSKU]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('standardStorageUnique'),'.blob.core.windows.net/vhds/',parameters('appServers')[copyindex()].hostName,'.osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('appServers')[copyindex()].hostName,'-nic'))]"
            }
          ]
        }
      }
    },

    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('dbServers')[copyindex()].hostName]",
      "copy": {
        "name": "dbServerVmLoop",
        "count": "[length(parameters('dbServers'))]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "DbVirtualMachines"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('standardStorageUnique'))]",
        "[concat('Microsoft.Storage/storageAccounts/',variables('premiumStorageUnique'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('dbServers')[copyindex()].hostName,'-nic')]",
        "Microsoft.Compute/availabilitySets/db-as"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets','db-as')]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('dbServers')[copyindex()].vmSku]"
        },
        "osProfile": {
          "computerName": "[parameters('dbServers')[copyindex()].hostName]",
          "adminUsername": "[parameters('adminUserName')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('dbDistroConfig').imagePublisher]",
            "offer": "[parameters('dbDistroConfig').imageOffer]",
            "sku": "[parameters('dbDistroConfig').imageSKU]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('standardStorageUnique'),'.blob.core.windows.net/vhds/',parameters('dbServers')[copyindex()].hostName,'.osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "redoLogs",
              "diskSizeGB": "[parameters('dbServerConfig').redoDiskSizeGb]",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://', variables('premiumStorageUnique') ,'.blob.core.windows.net/vhds/',parameters('dbServers')[copyindex()].hostName,'redo.vhd')]"
              },
              "caching": "ReadOnly",
              "createOption": "Empty"
            },
            {
              "name": "dataFiles",
              "diskSizeGB": "[parameters('dbServerConfig').dataDiskSizeGb]",
              "lun": 1,
              "vhd": {
                "uri": "[concat('http://', variables('premiumStorageUnique') ,'.blob.core.windows.net/vhds/',parameters('dbServers')[copyindex()].hostName,'data.vhd')]"
              },
              "caching": "ReadOnly",
              "createOption": "Empty"
            },
            {
              "name": "fastRecoveryArea",
              "diskSizeGB": "[parameters('dbServerConfig').fraDiskSizeGb]",
              "lun": 2,
              "vhd": {
                "uri": "[concat('http://', variables('premiumStorageUnique') ,'.blob.core.windows.net/vhds/',parameters('dbServers')[copyindex()].hostName,'fra.vhd')]"
              },
              "caching": "ReadOnly",
              "createOption": "Empty"
            }


          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('dbServers')[copyindex()].hostName,'-nic'))]"
            }
          ]
        }
      }
    },


    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('jumpBoxConfig').hostName]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "JumpBoxVirtualMachine"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('standardStorageUnique'))]",
        "[concat('Microsoft.Network/networkInterfaces/', concat(parameters('jumpBoxConfig').hostName,'-nic'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('jumpBoxConfig').vmSize]"
        },
        "osProfile": {
          "computerName": "[parameters('jumpBoxConfig').hostName]",
          "adminUsername": "[parameters('adminUserName')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('appDistroConfig').imagePublisher]",
            "offer": "[parameters('appDistroConfig').imageOffer]",
            "sku": "[parameters('appDistroConfig').imageSKU]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('standardStorageUnique'),'.blob.core.windows.net/vhds/',parameters('jumpBoxConfig').hostName,'.osdisk.vhd')]"
            },
            "caching": "ReadOnly",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('jumpBoxConfig').hostName,'-nic'))]"
            }
          ]
        }
      }
    }

  ]
}
